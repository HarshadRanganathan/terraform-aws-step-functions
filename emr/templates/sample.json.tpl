{
   "Comment":"Sample Job",
   "StartAt":"SPIN_UP_THE_CLUSTER",
   "States":{
      "SPIN_UP_THE_CLUSTER":{
         "Type":"Task",
         "Resource":"arn:aws:states:::elasticmapreduce:createCluster.sync",
         "Parameters":{
            "Name":"${emr_name}",
            "VisibleToAllUsers":true,
            "ReleaseLabel":"emr-5.35.0",
            "SecurityConfiguration":"${namespace}-${stage}-emr-standard-security-configuration",
            "Applications":[
               {
                  "Name":"Spark"
               }
            ],
            "Tags":[
               {
                  "Key":"app",
                  "Value":"emr"
               },
               {
                  "Key":"ManagedBy",
                  "Value":"Terraform"
               },
               {
                  "Key":"Team",
                  "Value":"${namespace}"
               },
               {
                  "Key":"stage",
                  "Value":"${stage}"
               },
               {
                  "Key":"Name",
                  "Value":"${emr_name}"
               }
            ],
            "Configurations":[
               {
                  "Classification":"hive-site",
                  "Properties":{
                     "hive.metastore.client.factory.class":"com.amazonaws.glue.catalog.metastore.AWSGlueDataCatalogHiveClientFactory"
                  }
               },
               {
                  "Classification":"emrfs-site",
                  "Properties":{
                     "fs.s3.enableServerSideEncryption":"true"
                  }
               },
               {
                  "Classification":"spark-log4j",
                  "Properties":{
                     "log4j.rootCategory":"ERROR,console",
                     "log4j.appender.console.target":"System.out",
                     "log4j.appender.console":"org.apache.log4j.ConsoleAppender",
                     "log4j.appender.console.layout":"org.apache.log4j.PatternLayout",
                     "log4j.appender.console.layout.ConversionPattern":"%d{yy/MM/dd HH:mm:ss} %p %c{1}: %m%n"
                  }
               }
            ],
            "ServiceRole":"arn:aws:iam::${account_id}:role/${namespace}-${stage}-emr",
            "JobFlowRole":"arn:aws:iam::${account_id}:instance-profile/${namespace}-${stage}-emr-worker-profile",
            "LogUri":"s3://${namespace}-${stage}-s3-log-storage/emr/${emr_name}/",
            "Instances":{
               "KeepJobFlowAliveWhenNoSteps":true,
               "Ec2SubnetIds":[
                  "${vpc_subnet_1}",
                  "${vpc_subnet_2}",
                  "${vpc_subnet_3}"
               ],
               "InstanceFleets":[
                  {
                     "Name":"MyMasterFleet",
                     "InstanceFleetType":"MASTER",
                     "TargetOnDemandCapacity":1,
                     "InstanceTypeConfigs":[
                        {
                           "InstanceType":"i3.8xlarge"
                        }
                     ]
                  },
                  {
                     "Name":"MyCoreFleet",
                     "InstanceFleetType":"CORE",
                     "TargetOnDemandCapacity":6,
                     "InstanceTypeConfigs":[
                        {
                           "InstanceType":"i3.8xlarge"
                        }
                     ]
                  },
                  {
                     "Name":"MyTaskFleet",
                     "InstanceFleetType":"TASK",
                     "TargetOnDemandCapacity":10,
                     "InstanceTypeConfigs":[
                        {
                           "InstanceType":"i3.8xlarge"
                        }
                     ]
                  }
               ]
            }
         },
         "ResultPath":"$.cluster",
         "Next":"EMR_STEP"
      },
      "EMR_STEP":{
         "Type":"Task",
         "Resource":"arn:aws:states:::elasticmapreduce:addStep.sync",
         "Parameters":{
            "ClusterId.$":"$.cluster.ClusterId",
            "Step":{
               "Name":"Test Step",
               "ActionOnFailure":"TERMINATE_CLUSTER",
               "HadoopJarStep":{
                  "Jar":"s3://${region}.elasticmapreduce/libs/script-runner/script-runner.jar",
                  "Args":[
                     "s3://${stage}/app-code/test.sh",
                     "${stage}"
                  ]
               }
            }
         },
         "Retry":[
            {
               "ErrorEquals":[
                  "States.ALL"
               ],
               "IntervalSeconds":1,
               "MaxAttempts":1,
               "BackoffRate":2
            }
         ],
         "ResultPath":"$.EMR_STEP",
         "Next":"TERMINATE_CLUSTER",
         "Catch":[
            {
               "ErrorEquals":[
                  "States.Runtime"
               ],
               "Next":"Send_To_SNS_Fail"
            },
            {
               "ErrorEquals":[
                  "States.ALL"
               ],
               "Next":"Send_To_SNS_Fail"
            }
         ]
      },
      "TERMINATE_CLUSTER":{
         "Type":"Task",
         "Resource":"arn:aws:states:::elasticmapreduce:terminateCluster",
         "Parameters":{
            "ClusterId.$":"$.cluster.ClusterId"
         },
         "End":true
      },
      "Send_To_SNS_Fail":{
         "Type":"Task",
         "Resource":"arn:aws:states:::sns:publish",
         "Parameters":{
            "Message":{
               "Input":"Error in EMR Step",
               "Error.$":"$.Error",
               "Cause.$":"$.Cause"
            },
            "Subject":"Error in EMR Job",
            "TopicArn":"arn:aws:sns:${region}:${account_id}:PROD_NOTIFICATION"
         },
         "End":true
      }
   }
}
